generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  email        String      @unique
  username     String      @unique
  password     String?
  lname        String?
  fname        String?
  status       Boolean     @default(true)
  departmentId Int?
  positionId   Int?
  roleId       Int?        @default(1)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  point        Int?        @default(0)
  img          String?
  Booking      Booking[]
  Department   Department? @relation(fields: [departmentId], references: [id])
  Position     Position?   @relation(fields: [positionId], references: [id])
  Role         Role?       @relation(fields: [roleId], references: [id])

  Content          Content[]
  PointReceived    PointReceived[]
  PointPay         PointPay[]
  PointReceivedPay PointReceivedPay[]
  ButtonLink       ButtonLink?        @relation(fields: [buttonLinkId], references: [id])
  buttonLinkId     Int?
}

model Role {
  id   Int     @id @default(autoincrement())
  name String?
  User User[]
}

model Department {
  id   Int     @id @default(autoincrement())
  name String?
  User User[]
}

model Position {
  id   Int     @id @default(autoincrement())
  name String?
  User User[]
}

model Booking {
  id              Int             @id @default(autoincrement())
  start           DateTime?
  end             DateTime?
  name            String?
  color           String?
  timed           Boolean?        @default(true)
  url             String?
  description     String?
  chairman        String?
  quantity        Int?
  meetingId       String?
  meetingPassword String?
  UserId          Int?
  ApproveBy       Int?
  MeetingTypeId   Int?
  RoomId          Int?
  ProgramId       Int?
  StatusId        Int?            @default(1)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  MeetingType     MeetingType?    @relation(fields: [MeetingTypeId], references: [id])
  Program         Program?        @relation(fields: [ProgramId], references: [id])
  Room            Room?           @relation(fields: [RoomId], references: [id])
  Status          Status?         @relation(fields: [StatusId], references: [id])
  User            User?           @relation(fields: [UserId], references: [id])
  BookingDevice   BookingDevice[]
  BookingDrink    BookingDrink[]
  BookingFood     BookingFood[]
}

model Program {
  id      Int       @id @default(autoincrement())
  name    String?
  Booking Booking[]
}

model Status {
  id      Int       @id @default(autoincrement())
  name    String?
  Booking Booking[]
}

model MeetingType {
  id      Int       @id @default(autoincrement())
  name    String?
  Booking Booking[]
}

model BookingDevice {
  BookingId Int
  DeviceId  Int
  Booking   Booking @relation(fields: [BookingId], references: [id])
  Device    Device  @relation(fields: [DeviceId], references: [id])

  @@id([BookingId, DeviceId])
}

model BookingFood {
  BookingId Int
  FoodId    Int
  Booking   Booking @relation(fields: [BookingId], references: [id])
  Food      Food    @relation(fields: [FoodId], references: [id])

  @@id([BookingId, FoodId])
}

model BookingDrink {
  BookingId Int
  DrinkId   Int
  Booking   Booking @relation(fields: [BookingId], references: [id])
  Drink     Drink   @relation(fields: [DrinkId], references: [id])

  @@id([BookingId, DrinkId])
}

model Room {
  id       Int       @id @default(autoincrement())
  name     String?
  quantity Int?
  color    String?
  Booking  Booking[]
}

model Device {
  id      Int             @id @default(autoincrement())
  name    String?
  Booking BookingDevice[]
}

model Food {
  id      Int           @id @default(autoincrement())
  name    String?
  Booking BookingFood[]
}

model Drink {
  id      Int            @id @default(autoincrement())
  name    String?
  Booking BookingDrink[]
}

model Content {
  id            Int             @id @default(autoincrement())
  ticket        String          @unique //เลขที่ใบงาน
  code          String          @unique //รหัสรับรางวัล
  start         DateTime?
  end           DateTime?
  timed         Boolean?        @default(true) //กำหนดเวลา
  title         String?
  description   String?
  detail        String?
  point         Int?            @default(0)
  show          Boolean?        @default(false) //เปิดสาธารณะ
  author        User?           @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction) //ผู้สร้าง
  ContentType   ContentType?    @relation(fields: [contentTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId        Int?
  contentTypeId Int?
  PointReceived PointReceived[]
  ContentImg    ContentImg[]
  PointPay      PointPay[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  active        Boolean?        @default(true) //สถานะการใช้งาน
}

model ContentType {
  id        Int       @id @default(autoincrement())
  name      String?   @unique
  Content   Content[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  active    Boolean?  @default(true) //สถานะการใช้งาน
}

model ContentImg {
  id        Int      @id @default(autoincrement())
  path      String?
  name      String?
  Content   Content? @relation(fields: [contentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  contentId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean? @default(true) //สถานะการใช้งาน
}

model PointReceived {
  id               Int                @id @default(autoincrement())
  ticket           String             @unique //เลขที่ใบงาน
  point            Int?               @default(0)
  Content          Content?           @relation(fields: [contentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User             User?              @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  contentId        Int?
  userId           Int?
  PointReceivedPay PointReceivedPay[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  active           Boolean?           @default(true) //สถานะการใช้งาน
}

model PointPay {
  id               Int                @id @default(autoincrement())
  ticket           String             @unique //เลขที่ใบงาน
  point            Int?               @default(0)
  approve          Boolean?           @default(false)
  User             User?              @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Content          Content?           @relation(fields: [contentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Reward           Reward?            @relation(fields: [rewardId], references: [id])
  userId           Int?
  contentId        Int?
  rewardId         Int?
  PointReceivedPay PointReceivedPay[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  active           Boolean?           @default(true)
}

model PointReceivedPay {
  id              Int            @id @default(autoincrement())
  date            DateTime?
  ticketReceived  String?
  ticketPay       String?
  pointReceived   Int?
  pointPay        Int?
  pointTotal      Int?
  User            User?          @relation(fields: [userId], references: [id])
  userId          Int?
  PointReceived   PointReceived? @relation(fields: [pointReceivedId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  PointPay        PointPay?      @relation(fields: [pointPayId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Reward          Reward?        @relation(fields: [rewardId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pointReceivedId Int?
  pointPayId      Int?
  rewardId        Int?
}

model Reward {
  id               Int                @id @default(autoincrement())
  ticket           String             @unique //เลขที่ใบงาน
  name             String?
  description      String?
  point            Int?               @default(0)
  RewardImg        RewardImg[]
  PointPay         PointPay[]
  PointReceivedPay PointReceivedPay[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  active           Boolean?           @default(true) //สถานะการใช้งาน
}

model RewardImg {
  id        Int      @id @default(autoincrement())
  path      String?
  name      String?
  rewardId  Int?
  Reward    Reward?  @relation(fields: [rewardId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean? @default(true) //สถานะการใช้งาน
}

model ButtonLink {
  id        Int      @id @default(autoincrement())
  ticket    String   @unique //เลขที่ใบงาน
  remark    String?
  User      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean? @default(true) //สถานะการใช้งาน
}
